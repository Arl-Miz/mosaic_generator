			 <html xmlns:v="urn:schemas-microsoft-com:vml"
			xmlns:o="urn:schemas-microsoft-com:office:office"
			xmlns:w="urn:schemas-microsoft-com:office:word"
			xmlns="http://www.w3.org/TR/REC-html40">
			
			<head>
			<meta http-equiv=Content-Type content="text/html; charset=utf-8">
			<meta name=ProgId content=Word.Document>
			<meta name=Generator content="Microsoft Word 9">
			<meta name=Originator content="Microsoft Word 9">
			<!--[if !mso]>
			<style>
			v\:* {behavior:url(#default#VML);}
			o\:* {behavior:url(#default#VML);}
			w\:* {behavior:url(#default#VML);}
			.shape {behavior:url(#default#VML);}
			</style>
			<![endif]-->
			<title></title>
			<!--[if gte mso 9]><xml>
			 <w:WordDocument>
			  <w:View>Print</w:View>
			  <w:DoNotHyphenateCaps/>
			  <w:PunctuationKerning/>
			  <w:DrawingGridHorizontalSpacing>9.35 pt</w:DrawingGridHorizontalSpacing>
			  <w:DrawingGridVerticalSpacing>9.35 pt</w:DrawingGridVerticalSpacing>
			 </w:WordDocument>
			</xml><![endif]-->
			<style>
			<!--
			 /* Font Definitions */
			@font-face
				{font-family:Verdana;
				panose-1:2 11 6 4 3 5 4 4 2 4;
				mso-font-charset:0;
				mso-generic-font-family:swiss;
				mso-font-pitch:variable;
				mso-font-signature:536871559 0 0 0 415 0;}
			 /* Style Definitions */
			p.MsoNormal, li.MsoNormal, div.MsoNormal
				{mso-style-parent:"";
				margin:0in;
				margin-bottom:.0001pt;
				mso-pagination:widow-orphan;
				font-size:7.5pt;
			        mso-bidi-font-size:8.0pt;
				font-family:"Verdana";
				mso-fareast-font-family:"Verdana";}
			p.small
				{mso-style-parent:"";
				margin:0in;
				margin-bottom:.0001pt;
				mso-pagination:widow-orphan;
				font-size:1.0pt;
			        mso-bidi-font-size:1.0pt;
				font-family:"Verdana";
				mso-fareast-font-family:"Verdana";}
			@page Section1
				{size:8.5in 11.0in;
				margin:1.0in 1.25in 1.0in 1.25in;
				mso-header-margin:.5in;
				mso-footer-margin:.5in;
				mso-paper-source:0;}
			div.Section1
				{page:Section1;}
			-->
			</style>
			<!--[if gte mso 9]><xml>
			 <o:shapedefaults v:ext="edit" spidmax="1032">
			  <o:colormenu v:ext="edit" strokecolor="none"/>
			 </o:shapedefaults></xml><![endif]--><!--[if gte mso 9]><xml>
			 <o:shapelayout v:ext="edit">
			  <o:idmap v:ext="edit" data="1"/>
			 </o:shapelayout></xml><![endif]-->
			 
			</head>
			<body><p dir="rtl" xss=removed><span xss=removed><span lang="hi-IN">به نام خدا</span></span></p>
<p dir="rtl"><span xss=removed><span lang="hi-IN">درس مباحث علوم کامپیوتر پروژه شماره ۱<span xss=removed>‬</span></span></span></p>
<p dir="rtl">‫<span xss=removed><span lang="hi-IN">ﻋﻨﻮﺍﻥ‬‫ﭘﺮﻭﮊﻩ‪</span></span>:‬<span xss=removed><span lang="hi-IN">ﻣﻮﻟﺪ‬‫ﺗﺼﻮﯾﺮ‬ ‫ﻣﻮﺯﺍﯾﯿکی‬</span></span></p>
<p dir="rtl">هدف از این پروژه تولید تصویر موازیک شده از تصویر هدف با مجموعه تصاویر ورودی است بطورکه ابتدا تصویر هدف به ماتریس MxN ازکاشی تقسیم می شود و هر کاشی با  نزدیک ترین میانگین رنگی از هر یک از تصاویر مجموعه تصاویر جایگزین می شود در نهایت تصویر نهایی به شکل موزایک خواهد بود.</p>
<p dir="rtl">در ابتدا از کاربر اندازه ی هر کاشی با عنوان block_size گرفته میشود سپس تصویر ورودی با عنوان target_iamge و مسیر فایل حاوی مجموعه تصاویر با عنوان dataset_folder_path گرفته میشود .</p>
<p dir="rtl">ابتدا نام تصویر ورودی به تابع make_image داده میشود و با استفاده از کتابخانه opencv انرا به ماتریس تصویر ورودی تبدیل میکند </p>
<p dir="rtl">سپس با استفاده از تابع load_images_from_folder مسیر فایل ورودی را گرفته و تمام عنواین با فرمت ها PNG,JPEG,JPG را استخراح کرده و انهارا به ماتریس تصاویر تبدیل کرده و در لیستی به عنوان dataset  ذخیره میکند بعد این لیست به تابع setResize فرستاده میشود و تمام تصاویر dataset با ابعاد block_size x block_size, را میسازد</p>
<p dir="rtl">تابع اصلی سازنده موازیک make_mosaic نام دارد که دران ابتدا عکس هدف به ابعاد مناسب در می اوریم برای بطوریکه کاشی ها در ان فیت شوند</p>
<p dir="rtl">سپس ماسک خالی با ابعاد تصویر هدف میسازیم و در ادامه کاشی های منتخب را به ان اضافه میکنیم </p>
<p dir="rtl">حلقه اصلی اینطور است که  اندازه ی هر کاشی در تصویر هدف را در نظر میگیریم و میانگین رنگی انرا محاسبه میکنیم(getAverage) و با میانگین هرکدام از تصاویر دیتاست مقایسه میکنیم(best_match_block) برای اینکار از نورم اختلاف میانگین تصویر هدف با تصویر دیتاست استفاده میکنیم و اینکار را برای هر کدام ار اعضای دیتاست انجام میدهیم . تصویری که کمترین اختلاف را داشته باشد برگزیده میشود و به ماسک اضافه میشود و اینکار را برای هر کاشی در عکس تکرار میکنیم. عکس تولید شده از ماسک عکس کاشی شده مورد نظر است</p>
<p dir="rtl"> </p></body></html>